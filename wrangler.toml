#:schema node_modules/wrangler/config-schema.json
name = "today-i-learned-a-new-word"
compatibility_date = "2024-11-12"
compatibility_flags = ["nodejs_compat"]
pages_build_output_dir = "./dist"

# Automatically place your workloads in an optimal location to minimize latency.
# If you are running back-end logic in a Pages Function, running it closer to your back-end infrastructure
# rather than the end user may result in better performance.
# Docs: https://developers.cloudflare.com/pages/functions/smart-placement/#smart-placement
# [placement]
# mode = "smart"

# Variable bindings. These are arbitrary, plaintext strings (similar to environment variables)
# Docs:
# - https://developers.cloudflare.com/pages/functions/bindings/#environment-variables
# Note: Use secrets to store sensitive data.
# - https://developers.cloudflare.com/pages/functions/bindings/#secrets
[vars]
PUBLIC_WIKIPEDIA_ACCESS_TOKEN = "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiJjN2JhZmM4MjQ2ZWZhNTQzYWQ5MzdmNDJiMWJmNjkxNSIsImp0aSI6IjQ0MzFlYTA5MjMxYjM1ZjM2N2MzZjZiNWFlYTFiMzJlZDc4NGJkMmRhN2NhYmY2NjdiZjZhNGQ5NDcyMWY5ZmU3ZTViMTNmMWI3YTFkYmM5IiwiaWF0IjoxNzMyNjM5MjYxLjE4NjYyMiwibmJmIjoxNzMyNjM5MjYxLjE4NjYyNywiZXhwIjozMzI4OTU0ODA2MS4xODQ0MzMsInN1YiI6IjQ4MDcxNjM1IiwiaXNzIjoiaHR0cHM6Ly9tZXRhLndpa2ltZWRpYS5vcmciLCJyYXRlbGltaXQiOnsicmVxdWVzdHNfcGVyX3VuaXQiOjUwMDAsInVuaXQiOiJIT1VSIn0sInNjb3BlcyI6WyJiYXNpYyJdfQ.hRCYvc3lcA8KC7ekH53rrWTMWenPy7srkvUt3b5y5f5AbVW9_j1Ba1sEgjtdMUTEvJqTYa3vKwacZGqJbh6riWkzOal7DpvRMHnGVhNebZBkQjVW8YfJqhJG-gBOtEX0qPRnrjC3WeyadueSyq2x3wetKefj5pZ6jT4p8d2Ls0YGfK_UQeLiDgGs0U0s4xVzBk7auO1iAoxpH6SC-7PdTnr-cldpwfdV9l8SG5W9q6l0uZ3wpOO2NrzCEMfuN7dn9qQA1E9uAmXC-t_9UTlVEGiKkc5UIMgmFjp_ABDnvQP5AW7hyZSaC_YTwTpEM9-CBKaolVRPEWbMWsYrE7on34Ow3icjJB5_h1cRhvtDQC0vB6CUkAHBcRa1CtHknd8WuzI3suwr7dLsJ1MDyn99-1BcJ3KflOz7lDiV9zt-cMgDugUcUbMLGQ7cU5gvMlT_oyKrPNZFOJEt9Iw0F5D1ztqSIxsF-2MAtF6JyXVBlR0sS5o15rLWoYY1VpjC0d6ytDPsoVg4UsuvnYFmjmHqmqSvjUWoGviPwc4jImTlrESRtNaEAikW5-SztqenZSw7EHhlgHHKVh9N6frLSn99kfiKipSq_fQitZu7ps2KITwibptH48Lm3ZxTN4kSsmo1Zr3MGGFulPfgCr9TiC48fCQ36rUZTelPPNKHT4G7Nxs"
PUBLIC_WIKIPEDIA_CLIENT_ID = "c7bafc8246efa543ad937f42b1bf6915"

PUBLIC_WIKIPEDIA_APP_NAME = "Wikipedia On This Day App"


# Bind the Workers AI model catalog. Run machine learning models, powered by serverless GPUs, on Cloudflare’s global network
# Docs: https://developers.cloudflare.com/pages/functions/bindings/#workers-ai
# [ai]
# binding = "AI"

# Bind a D1 database. D1 is Cloudflare’s native serverless SQL database.
# Docs: https://developers.cloudflare.com/pages/functions/bindings/#d1-databases
# [[d1_databases]]
# binding = "MY_DB"
# database_name = "my-database"
# database_id = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"

# Bind a Durable Object. Durable objects are a scale-to-zero compute primitive based on the actor model.
# Durable Objects can live for as long as needed. Use these when you need a long-running "server", such as in realtime apps.
# Docs: https://developers.cloudflare.com/workers/runtime-apis/durable-objects
# [[durable_objects.bindings]]
# name = "MY_DURABLE_OBJECT"
# class_name = "MyDurableObject"
# script_name = 'my-durable-object'

# Bind a KV Namespace. Use KV as persistent storage for small key-value pairs.
# Docs: https://developers.cloudflare.com/pages/functions/bindings/#kv-namespaces
# [[kv_namespaces]]
# binding = "MY_KV_NAMESPACE"
# id = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"

# Bind a Queue producer. Use this binding to schedule an arbitrary task that may be processed later by a Queue consumer.
# Docs: https://developers.cloudflare.com/pages/functions/bindings/#queue-producers
# [[queues.producers]]
# binding = "MY_QUEUE"
# queue = "my-queue"

# Bind an R2 Bucket. Use R2 to store arbitrarily large blobs of data, such as files.
# Docs: https://developers.cloudflare.com/pages/functions/bindings/#r2-buckets
# [[r2_buckets]]
# binding = "MY_BUCKET"
# bucket_name = "my-bucket"

# Bind another Worker service. Use this binding to call another Worker without network overhead.
# Docs: https://developers.cloudflare.com/pages/functions/bindings/#service-bindings
# [[services]]
# binding = "MY_SERVICE"
# service = "my-service"

# To use different bindings for preview and production environments, follow the examples below.
# When using environment-specific overrides for bindings, ALL bindings must be specified on a per-environment basis.
# Docs: https://developers.cloudflare.com/pages/functions/wrangler-configuration#environment-specific-overrides

######## PREVIEW environment config ########

# [env.preview.vars]
# API_KEY = "xyz789"

# [[env.preview.kv_namespaces]]
# binding = "MY_KV_NAMESPACE"
# id = "<PREVIEW_NAMESPACE_ID>"

######## PRODUCTION environment config ########

# [env.production.vars]
# API_KEY = "abc123"

# [[env.production.kv_namespaces]]
# binding = "MY_KV_NAMESPACE"
# id = "<PRODUCTION_NAMESPACE_ID>"
